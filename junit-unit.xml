<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="0" failures="47" skipped="0" tests="200" time="0.881" timestamp="2025-06-02T08:50:08.494282-04:00" hostname="Ramseys-MacBook-Pro.local"><testcase classname="tests.test_behavior_profiler.TestDataClasses" name="test_register_access_creation" time="0.029" /><testcase classname="tests.test_behavior_profiler.TestDataClasses" name="test_register_access_optional_fields" time="0.000" /><testcase classname="tests.test_behavior_profiler.TestDataClasses" name="test_timing_pattern_creation" time="0.000" /><testcase classname="tests.test_behavior_profiler.TestDataClasses" name="test_behavior_profile_creation" time="0.003" /><testcase classname="tests.test_behavior_profiler.TestBehaviorProfilerInitialization" name="test_valid_bdf_initialization" time="0.001" /><testcase classname="tests.test_behavior_profiler.TestBehaviorProfilerInitialization" name="test_invalid_bdf_initialization" time="0.000" /><testcase classname="tests.test_behavior_profiler.TestBehaviorProfilerInitialization" name="test_default_parameters" time="0.000" /><testcase classname="tests.test_behavior_profiler.TestLogging" name="test_debug_logging_enabled" time="0.000" /><testcase classname="tests.test_behavior_profiler.TestLogging" name="test_debug_logging_disabled" time="0.000" /><testcase classname="tests.test_behavior_profiler.TestMonitoringSetup" name="test_setup_monitoring_success" time="0.001" /><testcase classname="tests.test_behavior_profiler.TestMonitoringSetup" name="test_setup_monitoring_device_not_found" time="0.006" /><testcase classname="tests.test_behavior_profiler.TestMonitoringSetup" name="test_setup_monitoring_command_failure" time="0.001" /><testcase classname="tests.test_behavior_profiler.TestBehaviorCapture" name="test_capture_behavior_profile_success" time="0.000"><failure message="AttributeError: &lt;class 'behavior_profiler.BehaviorProfiler'&gt; does not have the attribute '_stop_monitoring'">/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1421: in patched
    with self.decoration_helper(patched,
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/contextlib.py:141: in __enter__
    return next(self.gen)
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1403: in decoration_helper
    arg = exit_stack.enter_context(patching)
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/contextlib.py:530: in enter_context
    result = _enter(cm)
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1495: in __enter__
    original, local = self.get_original()
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1465: in get_original
    raise AttributeError(
E   AttributeError: &lt;class 'behavior_profiler.BehaviorProfiler'&gt; does not have the attribute '_stop_monitoring'</failure></testcase><testcase classname="tests.test_behavior_profiler.TestBehaviorCapture" name="test_capture_behavior_profile_setup_failure" time="0.001"><failure message="AssertionError: Regex pattern did not match.&#10; Regex: 'Failed to setup monitoring'&#10; Input: 'Failed to start monitoring'">tests/test_behavior_profiler.py:233: in test_capture_behavior_profile_setup_failure
    profiler.capture_behavior_profile(1.0)
src/behavior_profiler.py:223: in capture_behavior_profile
    raise RuntimeError("Failed to start monitoring")
E   RuntimeError: Failed to start monitoring

During handling of the above exception, another exception occurred:
tests/test_behavior_profiler.py:232: in test_capture_behavior_profile_setup_failure
    with pytest.raises(RuntimeError, match="Failed to setup monitoring"):
E   AssertionError: Regex pattern did not match.
E    Regex: 'Failed to setup monitoring'
E    Input: 'Failed to start monitoring'</failure></testcase><testcase classname="tests.test_behavior_profiler.TestBehaviorCapture" name="test_capture_behavior_profile_with_duration" time="0.001"><failure message="AttributeError: &lt;class 'behavior_profiler.BehaviorProfiler'&gt; does not have the attribute '_stop_monitoring'">/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1421: in patched
    with self.decoration_helper(patched,
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/contextlib.py:141: in __enter__
    return next(self.gen)
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1403: in decoration_helper
    arg = exit_stack.enter_context(patching)
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/contextlib.py:530: in enter_context
    result = _enter(cm)
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1495: in __enter__
    original, local = self.get_original()
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1465: in get_original
    raise AttributeError(
E   AttributeError: &lt;class 'behavior_profiler.BehaviorProfiler'&gt; does not have the attribute '_stop_monitoring'</failure></testcase><testcase classname="tests.test_behavior_profiler.TestPatternAnalysis" name="test_analyze_patterns_basic" time="0.001"><failure message="AssertionError: assert 'register_usage' in {'behavioral_signatures': {'interrupt_activity': 0, 'state_complexity': 1, 'timing_regularity': 0.95}, 'device_charact...cy device - simple polling model may suffice', 'Highly regular timing patterns - implement precise timing simulation']}">tests/test_behavior_profiler.py:288: in test_analyze_patterns_basic
    assert "register_usage" in analysis
E   AssertionError: assert 'register_usage' in {'behavioral_signatures': {'interrupt_activity': 0, 'state_complexity': 1, 'timing_regularity': 0.95}, 'device_charact...cy device - simple polling model may suffice', 'Highly regular timing patterns - implement precise timing simulation']}</failure></testcase><testcase classname="tests.test_behavior_profiler.TestPatternAnalysis" name="test_analyze_patterns_empty_profile" time="0.000"><failure message="KeyError: 'register_diversity'">tests/test_behavior_profiler.py:320: in test_analyze_patterns_empty_profile
    assert analysis["device_characteristics"]["register_diversity"] == 0
E   KeyError: 'register_diversity'</failure></testcase><testcase classname="tests.test_behavior_profiler.TestPatternAnalysis" name="test_analyze_patterns_single_register" time="0.000"><failure message="KeyError: 'register_diversity'">tests/test_behavior_profiler.py:341: in test_analyze_patterns_single_register
    assert analysis["device_characteristics"]["register_diversity"] == 1
E   KeyError: 'register_diversity'</failure></testcase><testcase classname="tests.test_behavior_profiler.TestTimingPatternDetection" name="test_detect_periodic_patterns" time="0.000"><failure message="AttributeError: 'BehaviorProfiler' object has no attribute '_detect_timing_patterns'. Did you mean: '_analyze_timing_patterns'?">tests/test_behavior_profiler.py:365: in test_detect_periodic_patterns
    patterns = profiler._detect_timing_patterns(accesses)
E   AttributeError: 'BehaviorProfiler' object has no attribute '_detect_timing_patterns'. Did you mean: '_analyze_timing_patterns'?</failure></testcase><testcase classname="tests.test_behavior_profiler.TestTimingPatternDetection" name="test_detect_burst_patterns" time="0.000"><failure message="AttributeError: 'BehaviorProfiler' object has no attribute '_detect_timing_patterns'. Did you mean: '_analyze_timing_patterns'?">tests/test_behavior_profiler.py:409: in test_detect_burst_patterns
    patterns = profiler._detect_timing_patterns(accesses)
E   AttributeError: 'BehaviorProfiler' object has no attribute '_detect_timing_patterns'. Did you mean: '_analyze_timing_patterns'?</failure></testcase><testcase classname="tests.test_behavior_profiler.TestTimingPatternDetection" name="test_detect_irregular_patterns" time="0.000"><failure message="AttributeError: 'BehaviorProfiler' object has no attribute '_detect_timing_patterns'. Did you mean: '_analyze_timing_patterns'?">tests/test_behavior_profiler.py:434: in test_detect_irregular_patterns
    patterns = profiler._detect_timing_patterns(accesses)
E   AttributeError: 'BehaviorProfiler' object has no attribute '_detect_timing_patterns'. Did you mean: '_analyze_timing_patterns'?</failure></testcase><testcase classname="tests.test_behavior_profiler.TestStateTransitionAnalysis" name="test_analyze_state_transitions_simple" time="0.000" /><testcase classname="tests.test_behavior_profiler.TestStateTransitionAnalysis" name="test_analyze_state_transitions_empty" time="0.000" /><testcase classname="tests.test_behavior_profiler.TestInterruptPatternAnalysis" name="test_analyze_interrupt_patterns_success" time="0.000"><failure message="TypeError: BehaviorProfiler._analyze_interrupt_patterns() missing 1 required positional argument: 'accesses'">tests/test_behavior_profiler.py:487: in test_analyze_interrupt_patterns_success
    patterns = profiler._analyze_interrupt_patterns()
E   TypeError: BehaviorProfiler._analyze_interrupt_patterns() missing 1 required positional argument: 'accesses'</failure></testcase><testcase classname="tests.test_behavior_profiler.TestInterruptPatternAnalysis" name="test_analyze_interrupt_patterns_failure" time="0.000"><failure message="TypeError: BehaviorProfiler._analyze_interrupt_patterns() missing 1 required positional argument: 'accesses'">tests/test_behavior_profiler.py:498: in test_analyze_interrupt_patterns_failure
    patterns = profiler._analyze_interrupt_patterns()
E   TypeError: BehaviorProfiler._analyze_interrupt_patterns() missing 1 required positional argument: 'accesses'</failure></testcase><testcase classname="tests.test_behavior_profiler.TestMonitoringThreads" name="test_start_stop_monitoring" time="0.000"><failure message="AttributeError: &lt;behavior_profiler.BehaviorProfiler object at 0x104b3bb70&gt; does not have the attribute '_monitor_device_access'">tests/test_behavior_profiler.py:511: in test_start_stop_monitoring
    with patch.object(profiler, "_monitor_device_access") as mock_monitor:
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1495: in __enter__
    original, local = self.get_original()
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1465: in get_original
    raise AttributeError(
E   AttributeError: &lt;behavior_profiler.BehaviorProfiler object at 0x104b3bb70&gt; does not have the attribute '_monitor_device_access'</failure></testcase><testcase classname="tests.test_behavior_profiler.TestMonitoringThreads" name="test_monitor_device_access_mock" time="0.000" /><testcase classname="tests.test_behavior_profiler.TestErrorHandling" name="test_invalid_duration" time="0.005"><failure message="RuntimeError: Failed to start monitoring">tests/test_behavior_profiler.py:556: in test_invalid_duration
    profiler.capture_behavior_profile(-1.0)
src/behavior_profiler.py:223: in capture_behavior_profile
    raise RuntimeError("Failed to start monitoring")
E   RuntimeError: Failed to start monitoring</failure></testcase><testcase classname="tests.test_behavior_profiler.TestErrorHandling" name="test_monitoring_already_active" time="0.000"><failure message="AttributeError: 'BehaviorProfiler' object has no attribute '_start_monitoring'. Did you mean: 'start_monitoring'?">tests/test_behavior_profiler.py:567: in test_monitoring_already_active
    profiler._start_monitoring()
E   AttributeError: 'BehaviorProfiler' object has no attribute '_start_monitoring'. Did you mean: 'start_monitoring'?</failure></testcase><testcase classname="tests.test_behavior_profiler.TestErrorHandling" name="test_stop_monitoring_not_active" time="0.000"><failure message="AttributeError: 'BehaviorProfiler' object has no attribute '_stop_monitoring'. Did you mean: 'stop_monitoring'?">tests/test_behavior_profiler.py:574: in test_stop_monitoring_not_active
    profiler._stop_monitoring()
E   AttributeError: 'BehaviorProfiler' object has no attribute '_stop_monitoring'. Did you mean: 'stop_monitoring'?</failure></testcase><testcase classname="tests.test_behavior_profiler.TestErrorHandling" name="test_queue_overflow_handling" time="0.001" /><testcase classname="tests.test_behavior_profiler.TestPerformanceCharacteristics" name="test_large_dataset_analysis_performance" time="0.004"><failure message="AttributeError: 'BehaviorProfiler' object has no attribute '_detect_timing_patterns'. Did you mean: '_analyze_timing_patterns'?">tests/test_behavior_profiler.py:621: in test_large_dataset_analysis_performance
    patterns = profiler._detect_timing_patterns(accesses)
E   AttributeError: 'BehaviorProfiler' object has no attribute '_detect_timing_patterns'. Did you mean: '_analyze_timing_patterns'?</failure></testcase><testcase classname="tests.test_behavior_profiler.TestPerformanceCharacteristics" name="test_memory_usage_optimization" time="0.025" /><testcase classname="tests.test_behavior_profiler.TestIntegrationWithBuildSystem" name="test_profile_data_serialization" time="0.000" /><testcase classname="tests.test_behavior_profiler.TestIntegrationWithBuildSystem" name="test_enhanced_register_context_generation" time="0.000"><failure message="AttributeError: 'BehaviorProfiler' object has no attribute '_generate_enhanced_context'">tests/test_behavior_profiler.py:694: in test_enhanced_register_context_generation
    enhanced_context = profiler._generate_enhanced_context(mock_behavior_profile)
E   AttributeError: 'BehaviorProfiler' object has no attribute '_generate_enhanced_context'</failure></testcase><testcase classname="tests.test_behavior_profiler.TestIntegrationWithBuildSystem" name="test_build_system_compatibility" time="0.000" /><testcase classname="tests.test_build.TestSecurityAndTempFiles" name="test_create_secure_tempfile_success" time="0.001" /><testcase classname="tests.test_build.TestSecurityAndTempFiles" name="test_create_secure_tempfile_error_cleanup" time="0.001" /><testcase classname="tests.test_build.TestDonorInfoExtraction" name="test_get_donor_info_success" time="0.000" /><testcase classname="tests.test_build.TestDonorInfoExtraction" name="test_get_donor_info_missing_fields" time="0.000" /><testcase classname="tests.test_build.TestDonorInfoExtraction" name="test_get_donor_info_malformed_output" time="0.001" /><testcase classname="tests.test_build.TestDriverRegisterScraping" name="test_scrape_driver_regs_success" time="0.000" /><testcase classname="tests.test_build.TestDriverRegisterScraping" name="test_scrape_driver_regs_command_failure" time="0.000" /><testcase classname="tests.test_build.TestDriverRegisterScraping" name="test_scrape_driver_regs_invalid_json" time="0.000" /><testcase classname="tests.test_build.TestBehaviorProfiling" name="test_integrate_behavior_profile_success" time="0.000"><failure message="AttributeError: 'list' object attribute 'append' is read-only">/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1609: in __enter__
    setattr(self.target, self.attribute, new_attr)
E   AttributeError: 'list' object attribute 'append' is read-only

During handling of the above exception, another exception occurred:
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1421: in patched
    with self.decoration_helper(patched,
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/contextlib.py:141: in __enter__
    return next(self.gen)
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1403: in decoration_helper
    arg = exit_stack.enter_context(patching)
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/contextlib.py:530: in enter_context
    result = _enter(cm)
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1622: in __enter__
    if not self.__exit__(*sys.exc_info()):
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1633: in __exit__
    delattr(self.target, self.attribute)
E   AttributeError: 'list' object attribute 'append' is read-only</failure></testcase><testcase classname="tests.test_build.TestBehaviorProfiling" name="test_integrate_behavior_profile_import_error" time="0.001"><failure message="AttributeError: 'list' object attribute 'append' is read-only">/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1609: in __enter__
    setattr(self.target, self.attribute, new_attr)
E   AttributeError: 'list' object attribute 'append' is read-only

During handling of the above exception, another exception occurred:
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1421: in patched
    with self.decoration_helper(patched,
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/contextlib.py:141: in __enter__
    return next(self.gen)
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1403: in decoration_helper
    arg = exit_stack.enter_context(patching)
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/contextlib.py:530: in enter_context
    result = _enter(cm)
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1622: in __enter__
    if not self.__exit__(*sys.exc_info()):
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1633: in __exit__
    delattr(self.target, self.attribute)
E   AttributeError: 'list' object attribute 'append' is read-only</failure></testcase><testcase classname="tests.test_build.TestBehaviorProfiling" name="test_integrate_behavior_profile_profiling_error" time="0.001"><failure message="AttributeError: 'list' object attribute 'append' is read-only">/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1609: in __enter__
    setattr(self.target, self.attribute, new_attr)
E   AttributeError: 'list' object attribute 'append' is read-only

During handling of the above exception, another exception occurred:
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1421: in patched
    with self.decoration_helper(patched,
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/contextlib.py:141: in __enter__
    return next(self.gen)
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1403: in decoration_helper
    arg = exit_stack.enter_context(patching)
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/contextlib.py:530: in enter_context
    result = _enter(cm)
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1622: in __enter__
    if not self.__exit__(*sys.exc_info()):
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1633: in __exit__
    delattr(self.target, self.attribute)
E   AttributeError: 'list' object attribute 'append' is read-only</failure></testcase><testcase classname="tests.test_build.TestSystemVerilogGeneration" name="test_build_sv_success" time="0.003"><failure message="AssertionError: assert 'reg_status_reg' in '//--------------------------------------------------------------\n// Enhanced PCIe BAR Controller with Realistic Timi...  assign msi_request = irq_latch;\n    assign cfg_interrupt = irq_latch &amp; cfg_interrupt_msi_enable;\n    \nendmodule\n'">tests/test_build.py:247: in test_build_sv_success
    assert "reg_status_reg" in sv_content
E   AssertionError: assert 'reg_status_reg' in '//--------------------------------------------------------------\n// Enhanced PCIe BAR Controller with Realistic Timi...  assign msi_request = irq_latch;\n    assign cfg_interrupt = irq_latch &amp; cfg_interrupt_msi_enable;\n    \nendmodule\n'</failure></testcase><testcase classname="tests.test_build.TestSystemVerilogGeneration" name="test_build_sv_no_registers" time="0.000" /><testcase classname="tests.test_build.TestSystemVerilogGeneration" name="test_build_sv_complex_timing" time="0.001" /><testcase classname="tests.test_build.TestStateMachineGeneration" name="test_generate_register_state_machine_simple" time="0.000" /><testcase classname="tests.test_build.TestStateMachineGeneration" name="test_generate_register_state_machine_insufficient_sequences" time="0.000" /><testcase classname="tests.test_build.TestStateMachineGeneration" name="test_generate_device_state_machine" time="0.000" /><testcase classname="tests.test_build.TestStateMachineGeneration" name="test_generate_device_state_machine_empty_regs" time="0.000" /><testcase classname="tests.test_build.TestTCLGeneration" name="test_code_from_bytes_valid" time="0.000" /><testcase classname="tests.test_build.TestTCLGeneration" name="test_code_from_bytes_invalid" time="0.000" /><testcase classname="tests.test_build.TestTCLGeneration" name="test_build_tcl_success" time="0.001"><failure message="AssertionError: assert 'set_property' in 'test_generate.tcl'">tests/test_build.py:375: in test_build_tcl_success
    assert "set_property" in tcl_content
E   AssertionError: assert 'set_property' in 'test_generate.tcl'</failure></testcase><testcase classname="tests.test_build.TestTCLGeneration" name="test_build_tcl_unsupported_bar_size" time="0.000" /><testcase classname="tests.test_build.TestBoardConfiguration" name="test_board_info_constants" time="0.000" /><testcase classname="tests.test_build.TestBoardConfiguration" name="test_aperture_constants" time="0.000" /><testcase classname="tests.test_build.TestUtilityFunctions" name="test_run_command_success" time="0.000" /><testcase classname="tests.test_build.TestUtilityFunctions" name="test_run_command_failure" time="0.000" /><testcase classname="tests.test_build.TestIntegrationScenarios" name="test_full_build_workflow" time="0.001" /><testcase classname="tests.test_build.TestErrorHandlingAndEdgeCases" name="test_empty_register_list_handling" time="0.000" /><testcase classname="tests.test_build.TestErrorHandlingAndEdgeCases" name="test_malformed_register_data" time="0.000" /><testcase classname="tests.test_build.TestErrorHandlingAndEdgeCases" name="test_missing_context_data" time="0.001" /><testcase classname="tests.test_build.TestPerformanceAndScaling" name="test_large_register_set_generation" time="0.003" /><testcase classname="tests.test_build.TestPerformanceAndScaling" name="test_memory_usage_with_large_datasets" time="0.008" /><testcase classname="tests.test_build.TestRegressionPrevention" name="test_register_offset_formatting" time="0.001" /><testcase classname="tests.test_build.TestRegressionPrevention" name="test_special_character_handling_in_names" time="0.001" /><testcase classname="tests.test_build.TestRegressionPrevention" name="test_timing_calculation_edge_cases" time="0.001" /><testcase classname="tests.test_donor_dump.TestKernelModuleBuild" name="test_module_compilation_success" time="0.002"><failure message="AttributeError: type object 'Mock' has no attribute 'call'. Did you mean: 'called'?">tests/test_donor_dump.py:36: in test_module_compilation_success
    Mock.call("make clean", shell=True, check=True),
E   AttributeError: type object 'Mock' has no attribute 'call'. Did you mean: 'called'?</failure></testcase><testcase classname="tests.test_donor_dump.TestKernelModuleBuild" name="test_module_compilation_failure" time="0.002" /><testcase classname="tests.test_donor_dump.TestKernelModuleBuild" name="test_kernel_headers_check" time="0.002" /><testcase classname="tests.test_donor_dump.TestModuleParameters" name="test_bdf_parameter_validation" time="0.001" /><testcase classname="tests.test_donor_dump.TestModuleParameters" name="test_module_parameter_parsing" time="0.001" /><testcase classname="tests.test_donor_dump.TestModuleLoading" name="test_module_loading_success" time="0.001" /><testcase classname="tests.test_donor_dump.TestModuleLoading" name="test_module_loading_failure" time="0.001" /><testcase classname="tests.test_donor_dump.TestModuleLoading" name="test_module_unloading" time="0.002" /><testcase classname="tests.test_donor_dump.TestModuleLoading" name="test_module_already_loaded_handling" time="0.001" /><testcase classname="tests.test_donor_dump.TestProcInterface" name="test_proc_donor_dump_output_parsing" time="0.001" /><testcase classname="tests.test_donor_dump.TestProcInterface" name="test_proc_output_missing_fields" time="0.001" /><testcase classname="tests.test_donor_dump.TestProcInterface" name="test_proc_output_malformed" time="0.001" /><testcase classname="tests.test_donor_dump.TestDeviceAccess" name="test_pci_config_space_access_simulation" time="0.000" /><testcase classname="tests.test_donor_dump.TestDeviceAccess" name="test_bar_size_calculation" time="0.000" /><testcase classname="tests.test_donor_dump.TestDeviceAccess" name="test_extended_config_space_access" time="0.000" /><testcase classname="tests.test_donor_dump.TestErrorHandling" name="test_device_not_found_error" time="0.000" /><testcase classname="tests.test_donor_dump.TestErrorHandling" name="test_permission_denied_error" time="0.000" /><testcase classname="tests.test_donor_dump.TestErrorHandling" name="test_module_build_dependency_missing" time="0.001" /><testcase classname="tests.test_donor_dump.TestErrorHandling" name="test_invalid_bdf_parameter_handling" time="0.000" /><testcase classname="tests.test_donor_dump.TestHardwareSimulation" name="test_simulated_pci_device_data" time="0.001" /><testcase classname="tests.test_donor_dump.TestHardwareSimulation" name="test_simulated_config_space_data" time="0.001" /><testcase classname="tests.test_donor_dump.TestMakefileValidation" name="test_makefile_exists" time="0.001" /><testcase classname="tests.test_donor_dump.TestMakefileValidation" name="test_makefile_targets" time="0.001" /><testcase classname="tests.test_donor_dump.TestMakefileValidation" name="test_kernel_version_compatibility" time="0.001" /><testcase classname="tests.test_driver_scrape.TestHelperFunctions" name="test_run_command_success" time="0.001" /><testcase classname="tests.test_driver_scrape.TestHelperFunctions" name="test_run_command_failure" time="0.000" /><testcase classname="tests.test_driver_scrape.TestKernelSourceManagement" name="test_ensure_kernel_source_extract_needed" time="0.001"><failure message="TypeError: 'list' object is not an iterator">tests/test_driver_scrape.py:67: in test_ensure_kernel_source_extract_needed
    result = driver_scrape.ensure_kernel_source()
src/scripts/driver_scrape.py:37: in ensure_kernel_source
    src_pkg = next(pathlib.Path("/usr/src").glob("linux-source-*.tar*"), None)
E   TypeError: 'list' object is not an iterator</failure></testcase><testcase classname="tests.test_driver_scrape.TestKernelSourceManagement" name="test_ensure_kernel_source_already_extracted" time="0.001"><failure message="TypeError: 'list' object is not an iterator">tests/test_driver_scrape.py:85: in test_ensure_kernel_source_already_extracted
    result = driver_scrape.ensure_kernel_source()
src/scripts/driver_scrape.py:37: in ensure_kernel_source
    src_pkg = next(pathlib.Path("/usr/src").glob("linux-source-*.tar*"), None)
E   TypeError: 'list' object is not an iterator</failure></testcase><testcase classname="tests.test_driver_scrape.TestKernelSourceManagement" name="test_ensure_kernel_source_not_found" time="0.001"><failure message="TypeError: 'list' object is not an iterator">tests/test_driver_scrape.py:95: in test_ensure_kernel_source_not_found
    driver_scrape.ensure_kernel_source()
src/scripts/driver_scrape.py:37: in ensure_kernel_source
    src_pkg = next(pathlib.Path("/usr/src").glob("linux-source-*.tar*"), None)
E   TypeError: 'list' object is not an iterator</failure></testcase><testcase classname="tests.test_driver_scrape.TestModuleResolution" name="test_ko_name_from_alias_success" time="0.000" /><testcase classname="tests.test_driver_scrape.TestModuleResolution" name="test_ko_name_from_alias_not_found" time="0.000" /><testcase classname="tests.test_driver_scrape.TestFunctionContextAnalysis" name="test_analyze_function_context_complete" time="0.000" /><testcase classname="tests.test_driver_scrape.TestFunctionContextAnalysis" name="test_analyze_function_context_interrupt_handler" time="0.000" /><testcase classname="tests.test_driver_scrape.TestFunctionContextAnalysis" name="test_analyze_function_context_runtime_function" time="0.000" /><testcase classname="tests.test_driver_scrape.TestFunctionContextAnalysis" name="test_analyze_function_context_not_found" time="0.000" /><testcase classname="tests.test_driver_scrape.TestFunctionContextAnalysis" name="test_analyze_function_context_cleanup_function" time="0.001" /><testcase classname="tests.test_driver_scrape.TestAccessPatternAnalysis" name="test_access_pattern_write_heavy" time="0.001"><failure message="AssertionError: assert 'read_write' == 'write_heavy'&#10;  &#10;  - write_heavy&#10;  + read_write">tests/test_driver_scrape.py:243: in test_access_pattern_write_heavy
    assert context["access_pattern"] == "write_heavy"
E   AssertionError: assert 'read_write' == 'write_heavy'
E     
E     - write_heavy
E     + read_write</failure></testcase><testcase classname="tests.test_driver_scrape.TestAccessPatternAnalysis" name="test_access_pattern_read_heavy" time="0.000"><failure message="AssertionError: assert 'read_write' == 'read_heavy'&#10;  &#10;  - read_heavy&#10;  + read_write">tests/test_driver_scrape.py:259: in test_access_pattern_read_heavy
    assert context["access_pattern"] == "read_heavy"
E   AssertionError: assert 'read_write' == 'read_heavy'
E     
E     - read_heavy
E     + read_write</failure></testcase><testcase classname="tests.test_driver_scrape.TestAccessPatternAnalysis" name="test_access_pattern_balanced" time="0.000"><failure message="AssertionError: assert 'read_write' == 'balanced'&#10;  &#10;  - balanced&#10;  + read_write">tests/test_driver_scrape.py:273: in test_access_pattern_balanced
    assert context["access_pattern"] == "balanced"
E   AssertionError: assert 'read_write' == 'balanced'
E     
E     - balanced
E     + read_write</failure></testcase><testcase classname="tests.test_driver_scrape.TestAccessPatternAnalysis" name="test_access_pattern_write_then_read" time="0.000"><failure message="AssertionError: assert 'read_write' == 'write_then_read'&#10;  &#10;  - write_then_read&#10;  + read_write">tests/test_driver_scrape.py:285: in test_access_pattern_write_then_read
    assert context["access_pattern"] == "write_then_read"
E   AssertionError: assert 'read_write' == 'write_then_read'
E     
E     - write_then_read
E     + read_write</failure></testcase><testcase classname="tests.test_driver_scrape.TestTimingConstraintAnalysis" name="test_analyze_timing_constraints_with_delays" time="0.000"><failure message="AttributeError: module 'driver_scrape' has no attribute 'analyze_timing_constraints'. Did you mean: 'extract_timing_constraints'?">tests/test_driver_scrape.py:303: in test_analyze_timing_constraints_with_delays
    constraints = driver_scrape.analyze_timing_constraints(file_content, "REG_INIT")
E   AttributeError: module 'driver_scrape' has no attribute 'analyze_timing_constraints'. Did you mean: 'extract_timing_constraints'?</failure></testcase><testcase classname="tests.test_driver_scrape.TestTimingConstraintAnalysis" name="test_analyze_timing_constraints_no_delays" time="0.000"><failure message="AttributeError: module 'driver_scrape' has no attribute 'analyze_timing_constraints'. Did you mean: 'extract_timing_constraints'?">tests/test_driver_scrape.py:320: in test_analyze_timing_constraints_no_delays
    constraints = driver_scrape.analyze_timing_constraints(
E   AttributeError: module 'driver_scrape' has no attribute 'analyze_timing_constraints'. Did you mean: 'extract_timing_constraints'?</failure></testcase><testcase classname="tests.test_driver_scrape.TestTimingConstraintAnalysis" name="test_analyze_timing_constraints_complex_delays" time="0.000"><failure message="AttributeError: module 'driver_scrape' has no attribute 'analyze_timing_constraints'. Did you mean: 'extract_timing_constraints'?">tests/test_driver_scrape.py:342: in test_analyze_timing_constraints_complex_delays
    constraints = driver_scrape.analyze_timing_constraints(
E   AttributeError: module 'driver_scrape' has no attribute 'analyze_timing_constraints'. Did you mean: 'extract_timing_constraints'?</failure></testcase><testcase classname="tests.test_driver_scrape.TestSequenceAnalysis" name="test_analyze_access_sequences_simple" time="0.000"><failure message="AttributeError: module 'driver_scrape' has no attribute 'analyze_access_sequences'. Did you mean: 'analyze_register_sequences'?">tests/test_driver_scrape.py:366: in test_analyze_access_sequences_simple
    sequences = driver_scrape.analyze_access_sequences(file_content, "REG_ENABLE")
E   AttributeError: module 'driver_scrape' has no attribute 'analyze_access_sequences'. Did you mean: 'analyze_register_sequences'?</failure></testcase><testcase classname="tests.test_driver_scrape.TestSequenceAnalysis" name="test_analyze_access_sequences_multiple_functions" time="0.000"><failure message="AttributeError: module 'driver_scrape' has no attribute 'analyze_access_sequences'. Did you mean: 'analyze_register_sequences'?">tests/test_driver_scrape.py:391: in test_analyze_access_sequences_multiple_functions
    sequences = driver_scrape.analyze_access_sequences(file_content, "REG_CTRL")
E   AttributeError: module 'driver_scrape' has no attribute 'analyze_access_sequences'. Did you mean: 'analyze_register_sequences'?</failure></testcase><testcase classname="tests.test_driver_scrape.TestSequenceAnalysis" name="test_analyze_access_sequences_complex_function" time="0.000"><failure message="AttributeError: module 'driver_scrape' has no attribute 'analyze_access_sequences'. Did you mean: 'analyze_register_sequences'?">tests/test_driver_scrape.py:411: in test_analyze_access_sequences_complex_function
    sequences = driver_scrape.analyze_access_sequences(file_content, "REG_TARGET")
E   AttributeError: module 'driver_scrape' has no attribute 'analyze_access_sequences'. Did you mean: 'analyze_register_sequences'?</failure></testcase><testcase classname="tests.test_driver_scrape.TestRegisterExtraction" name="test_extract_registers_from_header" time="0.001"><failure message="AttributeError: module 'driver_scrape' has no attribute 'extract_registers_from_file'">tests/test_driver_scrape.py:445: in test_extract_registers_from_header
    registers = driver_scrape.extract_registers_from_file("test_header.h")
E   AttributeError: module 'driver_scrape' has no attribute 'extract_registers_from_file'</failure></testcase><testcase classname="tests.test_driver_scrape.TestRegisterExtraction" name="test_extract_registers_from_source" time="0.001"><failure message="AttributeError: module 'driver_scrape' has no attribute 'enhance_registers_with_context'">tests/test_driver_scrape.py:489: in test_extract_registers_from_source
    enhanced_registers = driver_scrape.enhance_registers_with_context(
E   AttributeError: module 'driver_scrape' has no attribute 'enhance_registers_with_context'</failure></testcase><testcase classname="tests.test_driver_scrape.TestMainWorkflow" name="test_main_workflow_success" time="0.000"><failure message="AttributeError: &lt;module 'driver_scrape' from '/Users/ramseymcgrath/code/PCILeechFWGenerator/src/scripts/driver_scrape.py'&gt; does not have the attribute 'extract_and_analyze_registers'">/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1421: in patched
    with self.decoration_helper(patched,
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/contextlib.py:141: in __enter__
    return next(self.gen)
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1403: in decoration_helper
    arg = exit_stack.enter_context(patching)
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/contextlib.py:530: in enter_context
    result = _enter(cm)
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1495: in __enter__
    original, local = self.get_original()
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1465: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'driver_scrape' from '/Users/ramseymcgrath/code/PCILeechFWGenerator/src/scripts/driver_scrape.py'&gt; does not have the attribute 'extract_and_analyze_registers'</failure></testcase><testcase classname="tests.test_driver_scrape.TestErrorHandling" name="test_invalid_vendor_device_format" time="0.000" /><testcase classname="tests.test_driver_scrape.TestErrorHandling" name="test_file_not_found_handling" time="0.000"><failure message="AttributeError: module 'driver_scrape' has no attribute 'extract_registers_from_file'">tests/test_driver_scrape.py:567: in test_file_not_found_handling
    registers = driver_scrape.extract_registers_from_file("nonexistent.h")
E   AttributeError: module 'driver_scrape' has no attribute 'extract_registers_from_file'</failure></testcase><testcase classname="tests.test_driver_scrape.TestErrorHandling" name="test_malformed_register_definitions" time="0.001"><failure message="AttributeError: module 'driver_scrape' has no attribute 'extract_registers_from_file'">tests/test_driver_scrape.py:579: in test_malformed_register_definitions
    registers = driver_scrape.extract_registers_from_file("malformed.h")
E   AttributeError: module 'driver_scrape' has no attribute 'extract_registers_from_file'</failure></testcase><testcase classname="tests.test_driver_scrape.TestErrorHandling" name="test_empty_source_files" time="0.001"><failure message="AttributeError: module 'driver_scrape' has no attribute 'extract_registers_from_file'">tests/test_driver_scrape.py:588: in test_empty_source_files
    registers = driver_scrape.extract_registers_from_file("empty.h")
E   AttributeError: module 'driver_scrape' has no attribute 'extract_registers_from_file'</failure></testcase><testcase classname="tests.test_driver_scrape.TestErrorHandling" name="test_binary_file_handling" time="0.000"><failure message="AttributeError: module 'driver_scrape' has no attribute 'extract_registers_from_file'">tests/test_driver_scrape.py:597: in test_binary_file_handling
    registers = driver_scrape.extract_registers_from_file("binary.o")
E   AttributeError: module 'driver_scrape' has no attribute 'extract_registers_from_file'</failure></testcase><testcase classname="tests.test_driver_scrape.TestPerformanceAndScaling" name="test_large_source_file_processing" time="0.002"><failure message="AttributeError: module 'driver_scrape' has no attribute 'extract_registers_from_file'">tests/test_driver_scrape.py:620: in test_large_source_file_processing
    registers = driver_scrape.extract_registers_from_file("large_file.h")
E   AttributeError: module 'driver_scrape' has no attribute 'extract_registers_from_file'</failure></testcase><testcase classname="tests.test_driver_scrape.TestPerformanceAndScaling" name="test_memory_usage_with_large_datasets" time="0.035" /><testcase classname="tests.test_driver_scrape.TestOutputFormatting" name="test_json_output_format" time="0.000" /><testcase classname="tests.test_driver_scrape.TestOutputFormatting" name="test_json_output_special_characters" time="0.000" /><testcase classname="tests.test_driver_scrape.TestOutputFormatting" name="test_empty_output_handling" time="0.000" /><testcase classname="tests.test_flash_fpga.TestCommandExecution" name="test_run_command_success" time="0.000" /><testcase classname="tests.test_flash_fpga.TestCommandExecution" name="test_run_command_failure" time="0.000" /><testcase classname="tests.test_flash_fpga.TestArgumentParsing" name="test_argument_parser_creation" time="0.000" /><testcase classname="tests.test_flash_fpga.TestArgumentParsing" name="test_argument_parser_missing_bitfile" time="0.000" /><testcase classname="tests.test_flash_fpga.TestUSBLoaderValidation" name="test_usbloader_available" time="0.000" /><testcase classname="tests.test_flash_fpga.TestUSBLoaderValidation" name="test_usbloader_not_available" time="0.000" /><testcase classname="tests.test_flash_fpga.TestBitfileValidation" name="test_bitfile_exists" time="0.001" /><testcase classname="tests.test_flash_fpga.TestBitfileValidation" name="test_bitfile_not_exists" time="0.000" /><testcase classname="tests.test_flash_fpga.TestFlashingProcess" name="test_flash_process_success" time="0.021"><failure message="AssertionError: expected call not found.&#10;Expected: run('usbloader --vidpid 1d50:6130 -f firmware.bin')&#10;  Actual: run('usbloader --vidpid 1d50:6130 -f /Users/ramseymcgrath/code/PCILeechFWGenerator/firmware.bin')&#10;&#10;pytest introspection follows:&#10;&#10;Args:&#10;assert ('usbloader -...irmware.bin',) == ('usbloader -...irmware.bin',)&#10;  &#10;  At index 0 diff: #x1B[0m#x1B[33m'#x1B[39;49;00m#x1B[33musbloader --vidpid 1d50:6130 -f /Users/ramseymcgrath/code/PCILeechFWGenerator/firmware.bin#x1B[39;49;00m#x1B[33m'#x1B[39;49;00m#x1B[90m#x1B[39;49;00m != #x1B[0m#x1B[33m'#x1B[39;49;00m#x1B[33musbloader --vidpid 1d50:6130 -f firmware.bin#x1B[39;49;00m#x1B[33m'#x1B[39;49;00m#x1B[90m#x1B[39;49;00m&#10;  Use -v to get more diff">/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:977: in assert_called_with
    raise AssertionError(_error_message()) from cause
E   AssertionError: expected call not found.
E   Expected: run('usbloader --vidpid 1d50:6130 -f firmware.bin')
E     Actual: run('usbloader --vidpid 1d50:6130 -f /Users/ramseymcgrath/code/PCILeechFWGenerator/firmware.bin')

During handling of the above exception, another exception occurred:
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:989: in assert_called_once_with
    return self.assert_called_with(*args, **kwargs)
E   AssertionError: expected call not found.
E   Expected: run('usbloader --vidpid 1d50:6130 -f firmware.bin')
E     Actual: run('usbloader --vidpid 1d50:6130 -f /Users/ramseymcgrath/code/PCILeechFWGenerator/firmware.bin')
E   
E   pytest introspection follows:
E   
E   Args:
E   assert ('usbloader -...irmware.bin',) == ('usbloader -...irmware.bin',)
E     
E     At index 0 diff: #x1B[0m#x1B[33m'#x1B[39;49;00m#x1B[33musbloader --vidpid 1d50:6130 -f /Users/ramseymcgrath/code/PCILeechFWGenerator/firmware.bin#x1B[39;49;00m#x1B[33m'#x1B[39;49;00m#x1B[90m#x1B[39;49;00m != #x1B[0m#x1B[33m'#x1B[39;49;00m#x1B[33musbloader --vidpid 1d50:6130 -f firmware.bin#x1B[39;49;00m#x1B[33m'#x1B[39;49;00m#x1B[90m#x1B[39;49;00m
E     Use -v to get more diff

During handling of the above exception, another exception occurred:
tests/test_flash_fpga.py:137: in test_flash_process_success
    mock_run.assert_called_once_with("usbloader --vidpid 1d50:6130 -f firmware.bin")
E   AssertionError: expected call not found.
E   Expected: run('usbloader --vidpid 1d50:6130 -f firmware.bin')
E     Actual: run('usbloader --vidpid 1d50:6130 -f /Users/ramseymcgrath/code/PCILeechFWGenerator/firmware.bin')
E   
E   pytest introspection follows:
E   
E   Args:
E   assert ('usbloader -...irmware.bin',) == ('usbloader -...irmware.bin',)
E     
E     At index 0 diff: #x1B[0m#x1B[33m'#x1B[39;49;00m#x1B[33musbloader --vidpid 1d50:6130 -f /Users/ramseymcgrath/code/PCILeechFWGenerator/firmware.bin#x1B[39;49;00m#x1B[33m'#x1B[39;49;00m#x1B[90m#x1B[39;49;00m != #x1B[0m#x1B[33m'#x1B[39;49;00m#x1B[33musbloader --vidpid 1d50:6130 -f firmware.bin#x1B[39;49;00m#x1B[33m'#x1B[39;49;00m#x1B[90m#x1B[39;49;00m
E     Use -v to get more diff</failure></testcase><testcase classname="tests.test_flash_fpga.TestFlashingProcess" name="test_flash_process_no_usbloader" time="0.000" /><testcase classname="tests.test_flash_fpga.TestFlashingProcess" name="test_flash_process_no_bitfile" time="0.001" /><testcase classname="tests.test_flash_fpga.TestVIDPIDConfiguration" name="test_default_vidpid" time="0.000" /><testcase classname="tests.test_flash_fpga.TestVIDPIDConfiguration" name="test_flash_command_format" time="0.000" /><testcase classname="tests.test_flash_fpga.TestErrorHandling" name="test_usbloader_command_failure" time="0.000" /><testcase classname="tests.test_flash_fpga.TestErrorHandling" name="test_usbloader_permission_error" time="0.000" /><testcase classname="tests.test_flash_fpga.TestErrorHandling" name="test_invalid_bitfile_path" time="0.000" /><testcase classname="tests.test_flash_fpga.TestIntegrationScenarios" name="test_complete_flash_workflow" time="0.001" /><testcase classname="tests.test_flash_fpga.TestIntegrationScenarios" name="test_flash_with_different_boards" time="0.001" /><testcase classname="tests.test_flash_fpga.TestPerformanceAndReliability" name="test_large_firmware_file_handling" time="0.004" /><testcase classname="tests.test_flash_fpga.TestPerformanceAndReliability" name="test_concurrent_flash_attempts" time="0.001" /><testcase classname="tests.test_flash_fpga.TestPerformanceAndReliability" name="test_path_resolution_edge_cases" time="0.001" /><testcase classname="tests.test_flash_fpga.TestSecurityConsiderations" name="test_command_injection_prevention" time="0.000" /><testcase classname="tests.test_flash_fpga.TestSecurityConsiderations" name="test_safe_command_execution" time="0.000" /><testcase classname="tests.test_flash_fpga.TestSecurityConsiderations" name="test_file_permission_checks" time="0.001" /><testcase classname="tests.test_flash_fpga.TestDocumentationAndUsage" name="test_help_message_content" time="0.000" /><testcase classname="tests.test_flash_fpga.TestDocumentationAndUsage" name="test_usage_examples" time="0.000" /><testcase classname="tests.test_flash_fpga.TestDocumentationAndUsage" name="test_error_message_clarity" time="0.000"><failure message="AssertionError: assert ('Install it and retry' in 'usbloader not found' or 'usbloader not found' in 'Install it and retry')">tests/test_flash_fpga.py:455: in test_error_message_clarity
    assert expected_content in error_type or error_type in expected_content
E   AssertionError: assert ('Install it and retry' in 'usbloader not found' or 'usbloader not found' in 'Install it and retry')</failure></testcase><testcase classname="tests.test_flash_fpga.TestCompatibility" name="test_usbloader_path_variations" time="0.000" /><testcase classname="tests.test_flash_fpga.TestCompatibility" name="test_cross_platform_path_handling" time="0.001" /><testcase classname="tests.test_flash_fpga.TestCompatibility" name="test_filename_encoding_handling" time="0.001" /><testcase classname="tests.test_generate.TestBDFValidation" name="test_valid_bdf_formats" time="0.000" /><testcase classname="tests.test_generate.TestBDFValidation" name="test_invalid_bdf_formats" time="0.000" /><testcase classname="tests.test_generate.TestPCIDeviceEnumeration" name="test_list_pci_devices_success" time="0.000" /><testcase classname="tests.test_generate.TestPCIDeviceEnumeration" name="test_list_pci_devices_empty" time="0.000" /><testcase classname="tests.test_generate.TestPCIDeviceEnumeration" name="test_list_pci_devices_malformed" time="0.000" /><testcase classname="tests.test_generate.TestDeviceSelection" name="test_choose_device_valid_selection" time="0.001" /><testcase classname="tests.test_generate.TestDeviceSelection" name="test_choose_device_invalid_then_valid" time="0.000" /><testcase classname="tests.test_generate.TestDriverManagement" name="test_get_current_driver_exists" time="0.000" /><testcase classname="tests.test_generate.TestDriverManagement" name="test_get_current_driver_none" time="0.000" /><testcase classname="tests.test_generate.TestDriverManagement" name="test_get_current_driver_invalid_bdf" time="0.000" /><testcase classname="tests.test_generate.TestDriverManagement" name="test_get_iommu_group" time="0.000" /><testcase classname="tests.test_generate.TestDriverManagement" name="test_get_iommu_group_invalid_bdf" time="0.000" /><testcase classname="tests.test_generate.TestVFIOBinding" name="test_bind_to_vfio_success" time="0.000" /><testcase classname="tests.test_generate.TestVFIOBinding" name="test_bind_to_vfio_no_original_driver" time="0.001" /><testcase classname="tests.test_generate.TestVFIOBinding" name="test_bind_to_vfio_driver_not_available" time="0.000" /><testcase classname="tests.test_generate.TestVFIOBinding" name="test_bind_to_vfio_invalid_bdf" time="0.000" /><testcase classname="tests.test_generate.TestDriverRestore" name="test_restore_original_driver_success" time="0.000" /><testcase classname="tests.test_generate.TestDriverRestore" name="test_restore_original_driver_not_vfio" time="0.000" /><testcase classname="tests.test_generate.TestDriverRestore" name="test_restore_original_driver_no_original" time="0.006" /><testcase classname="tests.test_generate.TestUSBDeviceManagement" name="test_list_usb_devices_success" time="0.001"><failure message="AssertionError: assert ('1d50:6130',...nMoko, Inc. ') == ('1d50:6130',...enMoko, Inc.')&#10;  &#10;  At index 1 diff: #x1B[0m#x1B[33m'#x1B[39;49;00m#x1B[33mOpenMoko, Inc. #x1B[39;49;00m#x1B[33m'#x1B[39;49;00m#x1B[90m#x1B[39;49;00m != #x1B[0m#x1B[33m'#x1B[39;49;00m#x1B[33mOpenMoko, Inc.#x1B[39;49;00m#x1B[33m'#x1B[39;49;00m#x1B[90m#x1B[39;49;00m&#10;  Use -v to get more diff">tests/test_generate.py:261: in test_list_usb_devices_success
    assert devices[0] == ("1d50:6130", "OpenMoko, Inc.")
E   AssertionError: assert ('1d50:6130',...nMoko, Inc. ') == ('1d50:6130',...enMoko, Inc.')
E     
E     At index 1 diff: #x1B[0m#x1B[33m'#x1B[39;49;00m#x1B[33mOpenMoko, Inc. #x1B[39;49;00m#x1B[33m'#x1B[39;49;00m#x1B[90m#x1B[39;49;00m != #x1B[0m#x1B[33m'#x1B[39;49;00m#x1B[33mOpenMoko, Inc.#x1B[39;49;00m#x1B[33m'#x1B[39;49;00m#x1B[90m#x1B[39;49;00m
E     Use -v to get more diff</failure></testcase><testcase classname="tests.test_generate.TestUSBDeviceManagement" name="test_list_usb_devices_command_error" time="0.000" /><testcase classname="tests.test_generate.TestUSBDeviceManagement" name="test_select_usb_device_success" time="0.001" /><testcase classname="tests.test_generate.TestUSBDeviceManagement" name="test_select_usb_device_no_devices" time="0.000" /><testcase classname="tests.test_generate.TestFirmwareFlashing" name="test_flash_firmware_success" time="0.000" /><testcase classname="tests.test_generate.TestFirmwareFlashing" name="test_flash_firmware_no_usbloader" time="0.000" /><testcase classname="tests.test_generate.TestFirmwareFlashing" name="test_flash_firmware_command_failure" time="0.000" /><testcase classname="tests.test_generate.TestContainerExecution" name="test_run_build_container_success" time="0.000" /><testcase classname="tests.test_generate.TestContainerExecution" name="test_run_build_container_no_vfio_device" time="0.000" /><testcase classname="tests.test_generate.TestContainerExecution" name="test_run_build_container_invalid_bdf" time="0.000" /><testcase classname="tests.test_generate.TestEnvironmentValidation" name="test_validate_environment_success" time="0.001" /><testcase classname="tests.test_generate.TestEnvironmentValidation" name="test_validate_environment_not_root" time="0.000" /><testcase classname="tests.test_generate.TestEnvironmentValidation" name="test_validate_environment_no_podman" time="0.000" /><testcase classname="tests.test_generate.TestMainWorkflow" name="test_main_success_no_flash" time="0.002" /><testcase classname="tests.test_generate.TestMainWorkflow" name="test_main_success_with_flash" time="0.001" /><testcase classname="tests.test_generate.TestMainWorkflow" name="test_main_no_devices" time="0.001" /><testcase classname="tests.test_generate.TestMainWorkflow" name="test_main_keyboard_interrupt" time="0.000" /><testcase classname="tests.test_generate.TestErrorHandling" name="test_run_command_success" time="0.000" /><testcase classname="tests.test_generate.TestErrorHandling" name="test_run_command_failure" time="0.000" /><testcase classname="tests.test_generate.TestArgumentParsing" name="test_default_arguments" time="0.000" /><testcase classname="tests.test_generate.TestArgumentParsing" name="test_custom_arguments" time="0.000" /></testsuite></testsuites>